# .github/workflows/deploy.yml
name: Access MongoDB Credentials from Vault

on:
  push:
    branches:
      - master # This must match your repository's branch name

permissions:
  id-token: write # Required to get the OIDC token
  contents: read  # Required to checkout the code

env:
  VAULT_ADDR: "https://vault-hoodk-public-vault-fcef8209.ef380317.z1.hashicorp.cloud:8200"
  VAULT_NAMESPACE: "admin"

jobs:
  get-creds:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Vault Secrets
        id: auth
        uses: hashicorp/vault-action@v3.0.0
        with:
          url: ${{ env.VAULT_ADDR }}
          namespace: ${{ env.VAULT_NAMESPACE }}
          method: jwt
          role: github-hoodk-role # The Vault role we created
          secrets: |
            database/creds/hoodk-role username | MONGO_USER
            database/creds/hoodk-role password | MONGO_PASSWORD

      - name: Use the MongoDB Credentials
        run: |
          echo "--- Dynamic Credentials Retrieved ---"
          echo "Username: ${{ steps.auth.outputs.MONGO_USER }}"
          echo "Password: ${{ steps.auth.outputs.MONGO_PASSWORD }}"

      - name: Detailed Troubleshooting on Failure
        if: ${{ failure() }}
        run: |
          echo "--- Troubleshooting Failed Step ---"
          echo "Attempting to get OIDC token and login manually..."
          
          # This command gets the raw OIDC token from GitHub
          curl -sSL -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | \
          jq "{ jwt: .value, role: \"github-hoodk-role\" }" > ./token.json
          
          echo '--- GitHub Actions Token Claims ---'
          # This command decodes and prints the claims from the JWT
          cat ./token.json | jq -r '.jwt | split(".") | .[1] | @base64d' | jq
          
          echo '--- Vault Login Response ---'
          # This command manually attempts to log in to Vault and shows the full response
          curl -sSLf -X POST -H "Content-Type: application/json" -H "X-Vault-Namespace: admin" \
          --data @token.json $VAULT_ADDR/v1/auth/jwt/login
          
        env:
          VAULT_ROLE: "github-hoodk-role"